#include <iostream>
#include <vector>
#include <algorithm>

struct Task {
    std::string description;
    std::string dueDate;
    bool completed;
};

void printMenu() {
    std::cout << "Menu :\n";
    std::cout << "1. Add a new task\n";
    std::cout << "2. Mark a task as completed\n";
    std::cout << "3. View the list of tasks\n";
    std::cout << "4. Remove a task\n";
    std::cout << "5. Exit\n";
    std::cout << "Choose an option: ";
}

void addTask(std::vector<Task>& tasks) {
    Task newTask;
    std::cout << "Enter task description: ";
    std::cin.ignore();
    std::getline(std::cin, newTask.description);
    std::cout << "Enter due date: ";
    std::cin >> newTask.dueDate;
    newTask.completed = false;
    tasks.push_back(newTask);
    std::cout << "Task added successfully!\n";
}

void markTaskCompleted(std::vector<Task>& tasks) {
    std::cout << "Enter the index of the task to mark as completed: ";
    int index;
    std::cin >> index;
    if (index >= 0 && index < tasks.size()) {
        tasks[index].completed = true;
        std::cout << "Task marked as completed!\n";
    }
    else {
        std::cout << "Invalid index!\n";
    }
}

bool compareTasks(const Task& a, const Task& b) {
    return a.dueDate < b.dueDate;
}

void viewTasks(const std::vector<Task>& tasks) {
    std::cout << "List of tasks:\n";
    std::cout << "-------------------\n";
    std::cout << "Index\tDescription\tDue Date\tStatus\n";
    int index = 0;
    for (const Task& task : tasks) {
        std::cout << index << "\t" << task.description << "\t" << task.dueDate << "\t" << (task.completed ? "Completed" : "Incomplete") << "\n";
        index++;
    }
    std::cout << "\n";
}

void removeTask(std::vector<Task>& tasks) {
    std::cout << "Enter the index of the task to remove: ";
    int index;
    std::cin >> index;
    if (index >= 0 && index < tasks.size()) {
        tasks.erase(tasks.begin() + index);
        std::cout << "Task removed successfully!\n";
    }
    else {
        std::cout << "Invalid index!\n";
    }
}

int main() {
    std::vector<Task> tasks;
    int choice;
    do {
        printMenu();
        std::cin >> choice;
        switch (choice) {
            case 1:
                addTask(tasks);
                break;
            case 2:
                markTaskCompleted(tasks);
                break;
            case 3:
                std::sort(tasks.begin(), tasks.end(), compareTasks);
                viewTasks(tasks);
                break;
            case 4:
                removeTask(tasks);
                break;
            case 5:
                std::cout << "Goodbye!\n";
                break;
            default:
                std::cout << "Invalid choice!\n";
                break;
        }
        std::cout << "\n";
    } while (choice != 5);

    return 0;
}
